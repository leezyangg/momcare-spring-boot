package rules;

import com.upm.momcarerecommendation.domain.model.MotherRequest
import com.upm.momcarerecommendation.domain.model.FoodRecommend
import com.upm.momcarerecommendation.domain.model.NutritionRecommend
import com.upm.momcarerecommendation.domain.model.Threshold

// Base threshold For Mother
rule "Base Mother"
    when
        $mother : MotherRequest()
    then
        insert(new Threshold("Sodium", null, Double.valueOf(2300)));
        insert(new Threshold("Iron", Double.valueOf(27), Double.valueOf(45)));
        insert(new Threshold("Vitamin B6", Double.valueOf(1.9), Double.valueOf(100)));
end
rule "Mother between 14 - 18"
    when
        $mother : MotherRequest( age>=14, age<=18 )
    then
        insert(new Threshold("Calcium", Double.valueOf(1300), Double.valueOf(2500)));
        insert(new Threshold("Vitamin A", Double.valueOf(750), Double.valueOf(2800)));
        insert(new Threshold("Vitamin C", Double.valueOf(80),  Double.valueOf(2000)));
end
rule "Mother 18+"
    when
        $mother : MotherRequest( age>18 )
    then
        insert(new Threshold("Calcium", Double.valueOf(1000), Double.valueOf(2500)));
        insert(new Threshold("Vitamin A", Double.valueOf(770), Double.valueOf(3000)));
        insert(new Threshold("Vitamin C", Double.valueOf(85),  Double.valueOf(2000)));
end
// Base threshold For Mother

// Base threshold For pregnant and postpartum woman
rule "Pregnant"
    when
        $mother : MotherRequest( isPregnant() )
    then
        insert(new Threshold("Protein", Double.valueOf(60), Double.valueOf(500)));                     // no guidelines found
        insert(new Threshold("Vitamin D", Double.valueOf(15), Double.valueOf(100)));
        insert(new Threshold("Vitamin B12", Double.valueOf(2.6), null));
        insert(new Threshold("Folic acid", Double.valueOf(600), Double.valueOf(1000)));
        insert(new Threshold("Iodine", Double.valueOf(220), Double.valueOf(1000)));
        insert(new Threshold("Choline", Double.valueOf(450), null));
end
rule "Postpartum and no Lactation"
    when
        $mother : MotherRequest( !isPregnant(), !isBreastFeeding() )
    then
        insert(new Threshold("Protein", Double.valueOf(46), Double.valueOf(500)));                     // no guidelines found
        insert(new Threshold("Vitamin D", Double.valueOf(5), Double.valueOf(100)));
        insert(new Threshold("Vitamin B12", Double.valueOf(2.4), null));
        insert(new Threshold("Folic acid", Double.valueOf(400), Double.valueOf(1000)));
        insert(new Threshold("Iodine", Double.valueOf(150), Double.valueOf(1000)));
        insert(new Threshold("Choline", Double.valueOf(425), null));
        insert(new Threshold("Calorie", Double.valueOf(1800), Double.valueOf(2200)));
end
rule "Postpartum and Lactation"
    when
        $mother : MotherRequest( !isPregnant(), isBreastFeeding() )
    then
        insert(new Threshold("Protein", Double.valueOf(71), Double.valueOf(500)));
        insert(new Threshold("Vitamin D", Double.valueOf(15), Double.valueOf(100)));
        insert(new Threshold("Vitamin B12", Double.valueOf(2.8), null));
        insert(new Threshold("Folic acid", Double.valueOf(500), Double.valueOf(1000)));
        insert(new Threshold("Iodine", Double.valueOf(270), Double.valueOf(1000)));
        insert(new Threshold("Choline", Double.valueOf(425), null));
        insert(new Threshold("Calorie", Double.valueOf(2300), Double.valueOf(2500)));
end
// Base threshold For pregnant and postpartum woman


// Threshold For pregnant in each stage
rule "Young Pregnant trimester 1"
    when
        $mother : MotherRequest( isPregnant(), age>18, age <=30 , trimester == 1 )
    then
        insert(new Threshold("Calorie", Double.valueOf(1900), Double.valueOf(2500)));
end
rule "Young Pregnant trimester 2"
    when
        $mother : MotherRequest( isPregnant(), age>18, age <=30, trimester == 2 )
    then
        insert(new Threshold("Calorie", Double.valueOf(2240), Double.valueOf(2500)));
end
rule "Young Pregnant trimester 3"
    when
        $mother : MotherRequest( isPregnant(), age > 18, age <= 30, trimester == 3 )
    then
        insert(new Threshold("Calorie", Double.valueOf(2352), Double.valueOf(2500)));
end

rule "Old Pregnant trimester 1"
    when
        $mother : MotherRequest( isPregnant(), age > 30 , trimester == 1 )
    then
        insert(new Threshold("Calorie", Double.valueOf(1900), Double.valueOf(2500)));
end
rule "Old Pregnant trimester 2"
    when
        $mother : MotherRequest( isPregnant(), age > 30, trimester == 2 )
    then
        insert(new Threshold("Calorie", Double.valueOf(2140), Double.valueOf(2500)));
end
rule "Old Pregnant trimester 3"
    when
        $mother : MotherRequest( isPregnant(), age > 30, trimester == 3 )
    then
        insert(new Threshold("Calorie", Double.valueOf(2252), Double.valueOf(2500)));
end
// Threshold For pregnant in each stage


// Threshold for spesific health condition
rule "High Blood Pressure Diet"
    when
        $mother : MotherRequest( detectedDiseases.contains("Mild Blood Pressure") ||
                                 detectedDiseases.contains("Moderate Blood Pressure") ||
                                 detectedDiseases.contains("Severe Blood Pressure"))
        $sodiumThreshold: Threshold( nutrition == "Sodium" )
        not FoodRecommend( value == "DASH")
        not FoodRecommend( value == "low-sodium")
    then
        $sodiumThreshold.setMaximumAmount(Double.valueOf(1500));
        insert(new FoodRecommend("health", "DASH"));
        insert(new FoodRecommend("diet", "low-sodium"));
end
rule "Diabetes Diet"
    when
        $mother : MotherRequest( detectedDiseases.contains("Diabetes") ||
                                 detectedDiseases.contains("Gestational Diabetes") )
        not FoodRecommend( value == "low-sugar")
    then
        insert(new FoodRecommend("health", "low-sugar"));
end
rule "Iron Deficiency Anaemia Diet"
    when
        $mother : MotherRequest( detectedDiseases.contains("Anaemia") )
        $ironThreshold : Threshold( nutrition == "Iron" )
    then
        $ironThreshold.setRequiredAmount(Double.valueOf(150));
        $ironThreshold.setMaximumAmount(Double.valueOf(200));
end
rule "Hypothyroid Diet"
    when
        $mother : MotherRequest( detectedDiseases.contains("Hypothyroid") )
        $iodineThreshold : Threshold( nutrition == "Iodine" )
    then
        $iodineThreshold.setRequiredAmount(Double.valueOf(250));
        $iodineThreshold.setMaximumAmount(Double.valueOf(1000));
end
rule "Hyperthyroid Diet"
    when
        $mother : MotherRequest( detectedDiseases.contains("Hyperthyroid") )
        $iodineThreshold : Threshold( nutrition == "Iodine" )
    then
        $iodineThreshold.setRequiredAmount(Double.valueOf(220));
        $iodineThreshold.setMaximumAmount(Double.valueOf(250));
end
rule "Thalassemia Diet"
    when
        $mother : MotherRequest( detectedDiseases.contains("Thalassemia") )
    then
        insert(new FoodRecommend("health", "shellfish-free"));
        insert(new FoodRecommend("health", "red-meat-free"));
end
// Threshold for spesific health condition


// Avoid Food Based on Religious
rule "Malay Diet"
    when
        $mother : MotherRequest( ethnicity == "Malay" )
    then
        insert(new FoodRecommend("health", "pork-free"));
end
rule "Indian Diet"
    when
        $mother : MotherRequest( ethnicity == "Indian" )
    then
        insert(new FoodRecommend("excluded", "beef"));
end
rule "Vegetarian"
    when
        $mother : MotherRequest( dietReligious == "Vegetarian" )
    then
        insert(new FoodRecommend("health", "vegetarian"));
end
rule "Vegan"
    when
        $mother : MotherRequest( dietReligious == "Vegan" )
    then
        insert(new FoodRecommend("health", "vegan"));
end
rule "Pecatarian"
    when
        $mother : MotherRequest( dietReligious == "Pecatarian" )
    then
        insert(new FoodRecommend("health", "pecatarian"));
end
rule "Kosher"
    when
        $mother : MotherRequest( dietReligious == "Kosher" )
    then
        insert(new FoodRecommend("health", "kosher"));
end
// Avoid Food Based on Religious


// Avoid Food Based on Allergy
rule "Avoid Peanut"
    when
        $mother : MotherRequest( allergyFood.contains("Peanuts") )
    then
        insert(new FoodRecommend( "health", "peanut-free"));
end
rule "Avoid Tree Nuts"
    when
        $mother : MotherRequest( allergyFood.contains("Tree Nuts") )
    then
        insert(new FoodRecommend( "health", "tree-nut-free"));
end
rule "Avoid Milk"
    when
        $mother : MotherRequest( allergyFood.contains("Milk") )
    then
        insert(new FoodRecommend( "health", "dairy-free"));
end
rule "Avoid Egg"
    when
        $mother : MotherRequest( allergyFood.contains("Eggs") )
    then
        insert(new FoodRecommend( "health", "egg-free"));
end
rule "Avoid Fish"
    when
        $mother : MotherRequest( allergyFood.contains("Fish") )
    then
        insert(new FoodRecommend( "health", "fish-free"));
end
rule "Avoid Shellfish"
    when
        $mother : MotherRequest( allergyFood.contains("Shellfish") )
    then
        insert(new FoodRecommend( "health", "shellfish-free"));
end
rule "Avoid Soy"
    when
        $mother : MotherRequest( allergyFood.contains("Soy") )
    then
        insert(new FoodRecommend( "health", "soy-free"));
end
rule "Avoid Wheat"
    when
        $mother : MotherRequest( allergyFood.contains("Wheat") )
    then
        insert(new FoodRecommend( "health", "wheat-free"));
end
// Avoid Food Based on Allergy


// Rules calculating the param
rule "Base Calories Param"
when
    $mother : MotherRequest( $totalIntake : totalDailyIntake )
    $threshold : Threshold( nutrition == "Calorie", $maxAmount : maximumAmount, $requiredAmount : requiredAmount )
    eval( $totalIntake != null && $totalIntake.getTotalCalories() < $requiredAmount )
then
    insert(new NutritionRecommend("calories", String.valueOf($requiredAmount/3)+"-"+String.valueOf($maxAmount)));
end
rule "Calories Param after reaching required"
when
    $mother : MotherRequest( $totalIntake : totalDailyIntake )
    $threshold : Threshold( nutrition == "Calorie", $maxAmount : maximumAmount, $requiredAmount : requiredAmount )
    eval( $totalIntake != null && $totalIntake.getTotalCalories() < $maxAmount && $totalIntake.getTotalCalories() > $requiredAmount)
then
    double remainingRequired = $maxAmount - $totalIntake.getTotalCalories();
    insert(new NutritionRecommend("calories", String.valueOf(remainingRequired)));
end
rule "Calories Param after exceed maximum"
when
    $mother : MotherRequest( $totalIntake : totalDailyIntake )
    $threshold : Threshold( nutrition == "Calorie", $maxAmount : maximumAmount)
    eval( $totalIntake != null && $totalIntake.getTotalCalories() > $maxAmount )
then
    insert(new NutritionRecommend("calories", "100"));
end

rule "Base Protein Param"
when
    $mother : MotherRequest( $totalIntake : totalDailyIntake )
    $threshold : Threshold( nutrition == "Protein", $maxAmount : maximumAmount, $minAmount : requiredAmount)
    eval( $totalIntake != null && $totalIntake.getTotalProteins() < $minAmount )
then
    insert(new NutritionRecommend("nutrients[PROCNT]", String.valueOf($minAmount/3)+"-"+String.valueOf($maxAmount)));
end


/*
rule "Calculating Folic acid Param"
when
    $mother : MotherRequest( $totalIntake : totalDailyIntake )
    $threshold : Threshold( nutrition == "Folic acid", $maxAmount : maximumAmount,
                            $totalIntake.getTotalFolicAcid() < $maxAmount )
then
    double remainingRequired = $maxAmount - $totalIntake.getTotalFolicAcid();
    insert(new NutritionRecommend("nutrients[FOLAC]", String.valueOf(remainingRequired)));
end*/
